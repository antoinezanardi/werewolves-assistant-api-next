name: Werewolves Assistant API Build Workflow
on:
  pull_request:
    branches:
      - 'main'
      - 'develop'
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  code-ql:
    name: CodeQL Scan ❇️
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4

      - name: Initialize CodeQL ⚙️
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: AutoBuild 🌡️
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis ❇️
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"

  install:
    name: Install ⚙️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Cache npm dependencies 🥡
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Install project dependencies 📦
        run: npm ci --ignore-scripts
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  build:
    name: Build ✨
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Build app ✨
        run: npm run build

  lint:
    name: Lint 🔍
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Check and lint code 🔍
        run: npm run lint

  unit-tests:
    name: Unit Tests 🧪
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Unit tests 🧪
        run: npm run test:unit:cov

  e2e-tests:
    name: E2E Tests ⚗️
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Start Docker containers 🐳
        run: npm run docker:test:start
      - name: E2E tests ⚗️
        run: npm run test:e2e:cov
      - name: Stop Docker containers 🐳
        run: npm run docker:test:stop

  all-tests:
    name: All Tests 🧬
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Start Docker containers 🐳
        run: npm run docker:test:start
      - name: All tests 🧬
        run: npm run test:cov
      - name: Save tests coverage in cache 🥡
        uses: actions/cache/save@v3
        id: cache-tests-coverage
        with:
          path: tests/coverage
          key: ${{ runner.os }}-tests-coverage-v3-${{hashFiles('tests/coverage/lcov.info')}}
      - name: Stop Docker containers 🐳
        run: npm run docker:test:stop

  mutant-tests:
    name: Mutant Tests 👽
    runs-on: ubuntu-latest
    env:
      STRYKER_DASHBOARD_API_KEY: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
      VERSION: ${{ github.head_ref }}
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Start Docker containers 🐳
        run: npm run docker:test:start
      - name: Mutant tests 👽
        run: npm run test:stryker
      - name: Stop Docker containers 🐳
        run: npm run docker:test:stop

  acceptance-tests:
    name: Acceptance Tests 🥒
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}
      - name: Start Docker containers 🐳
        run: npm run docker:test:start
      - name: Acceptance Tests 🥒
        run: npm run test:cucumber
      - name: Stop Docker containers 🐳
        run: npm run docker:test:stop

  sonarcloud:
    name: SonarCloud Analysis 🌥️
    runs-on: ubuntu-latest
    needs:
      - all-tests
    if: "!startsWith(github.head_ref, 'dependabot/')"
    steps:
    - name: Checkout GitHub repository 📡
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Restore tests coverage from cache 🥡
      uses: actions/cache/restore@v3
      id: cache-tests-coverage
      with:
        path: tests/coverage
        key: ${{ runner.os }}-tests-coverage-v3-
        restore-keys: |
          ${{ runner.os }}-tests-coverage-v3-
    - name: SonarCloud Scan 🌥️
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}