name: 🏷️ Test release PR

on:
  push:
    branches:
      - "feat/lint-main-pr-name"

env:
  GITHUB_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

jobs:
  install:
    name: Install ⚙️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4

      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Cache npm dependencies 🥡
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}

      - name: Install project dependencies 📦
        run: npm ci --ignore-scripts
        if: steps.cache-node-modules.outputs.cache-hit != 'true'

  get-next-release-version:
    name: Release 🏷️
    runs-on: ubuntu-latest
    needs:
      - install
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup NodeJS ⚙️
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Restore npm dependencies from cache 🥡
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-v3-${{ hashFiles('package-lock.json') }}

      - name: Release 🏷️
        id: release
        run: npx semantic-release --dry-run --no-ci

    outputs:
      new-release-published: ${{ steps.release.outputs.new-release-published }}
      new-release-version: ${{ steps.release.outputs.new-release-version }}

  upsert-pr-release:
    name: Upsert Pull Request Release 🔃
    runs-on: ubuntu-latest
    needs:
      - get-next-release-version
    steps:
      - name: Checkout GitHub repository 📡
        uses: actions/checkout@v4

      - name: List open PR into main
        run: | 
          OPEN_PR_INTO_MAIN=$(gh pr list --state open -B main --search "Release in:title")
          echo 'OPEN_PR_INTO_MAIN='$OPEN_PR_INTO_MAIN >> $GITHUB_ENV

      - name: Create Release PR if it doesn't exist
        if: ${{ $GITHUB_ENV.OPEN_PR_INTO_MAIN == '' }}
        run: gh pr create --title "Release v${{ needs.release.outputs.new-release-version }}" --base main --head develop